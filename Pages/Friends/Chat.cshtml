@page
@model Movies.Pages.Friends.ChatModel
@{
    ViewData["Title"] = "Chat";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">Chat with @Model.FormatUserName(Model.FriendUser?.UserName)</h4>

        <form method="post" asp-page-handler="ToggleFollow" class="d-inline">
            <input type="hidden" name="friendId" value="@Model.FriendUser?.Id" />
            <button type="submit" class="btn @(Model.IsFollowing ? "btn-success" : "btn-outline-secondary")">
                @(Model.IsFollowing ? "Following" : "Follow")
            </button>
        </form>
    </div>

    <!-- Chat Window -->
    <div id="chat-box" class="border rounded p-3 bg-light mb-3" style="height: 70vh; overflow-y: auto;">
        @if (Model.Messages.Count == 0)
        {
            <p class="text-muted text-center mt-5">No messages yet. Start the conversation!</p>
        }
        else
        {
            var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            foreach (var msg in Model.Messages)
            {
                bool isMine = msg.FromUserId == currentUserId;

                <div class="d-flex mb-2 @(isMine ? "justify-content-end" : "justify-content-start")">
                    <div class="p-2 rounded-3 @(isMine ? "bg-primary text-white" : "bg-white border")" style="max-width: 70%;">
                        <div class="fw-bold small mb-1">
                            @(isMine ? "You" : Model.FormatUserName(Model.FriendUser?.UserName))
                        </div>
                        <div>@msg.Content</div>
                        <div class="text-muted small text-end mt-1">@msg.SentAt.ToLocalTime().ToShortTimeString()</div>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Message Input -->
    <form method="post" asp-page-handler="SendMessage" class="sticky-bottom bg-white p-2 border-top">
        <input type="hidden" name="friendId" value="@Model.FriendUser?.Id" />
        <div class="input-group">
            <input type="text" name="NewMessage" class="form-control" placeholder="Type a message..." required />
            <button type="submit" class="btn btn-primary">Send</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Scroll chat window to the bottom automatically
        const chatBox = document.getElementById("chat-box");
        if (chatBox) {
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Optional: auto-refresh every 5 seconds (simple polling)
        setInterval(() => {
            const params = new URLSearchParams(window.location.search);
            if (params.has("friendId")) {
                fetch(window.location.pathname + "?friendId=" + params.get("friendId"))
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const newDoc = parser.parseFromString(html, "text/html");
                        const newChat = newDoc.getElementById("chat-box");
                        if (newChat && chatBox) {
                            chatBox.innerHTML = newChat.innerHTML;
                            chatBox.scrollTop = chatBox.scrollHeight;
                        }
                    });
            }
        }, 5000);
    </script>
}
