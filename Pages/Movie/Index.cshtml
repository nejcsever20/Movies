@page
@model Movies.Pages.Movie.IndexModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Movies";
    bool isAdmin = false;

    if (SignInManager.IsSignedIn(User))
    {
        var currentUser = UserManager.GetUserAsync(User).Result;
        if (currentUser != null)
        {
            isAdmin = UserManager.IsInRoleAsync(currentUser, "Admin").Result;
        }
    }
}

<div class="container mt-4">
    <h2 class="mb-3">Movies</h2>

    <!-- Search Bar -->
    <form method="get" class="mb-4">
        <div class="input-group">
            <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search movies by title..." />
            <button type="submit" class="btn btn-primary">Search</button>
            @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
            {
                <a asp-page="/Movie/Index" class="btn btn-outline-secondary">Clear</a>
            }
        </div>
    </form>

    @if (isAdmin)
    {
        <div class="mb-3">
            <a asp-page="/Admin/CreateMovie" class="btn btn-success">Create Movie</a>
        </div>
    }

    <div class="row row-cols-2 row-cols-md-4 row-cols-lg-5 g-3">
        @foreach (var movie in Model.MoviesList)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <a asp-page="/Admin/DetailsMovie" asp-route-id="@movie.MovieId" class="text-decoration-none text-dark">
                        @if (!string.IsNullOrEmpty(movie.ImagePath))
                        {
                            <img src="@movie.ImagePath" alt="@movie.Title" class="card-img-top" style="height: 250px; object-fit: cover;">
                        }
                        else
                        {
                            <img src="/images/movies/default.jpg" alt="No Image" class="card-img-top" style="height: 250px; object-fit: cover;">
                        }

                        <div class="card-body">
                            <h6 class="card-title text-center fw-bold">@movie.Title</h6>
                        </div>
                    </a>

                    <div class="card-footer text-center bg-light d-flex flex-wrap justify-content-center gap-1">
                        <a asp-page="/Admin/DetailsMovie" asp-route-id="@movie.MovieId" class="btn btn-sm btn-outline-primary">
                            Details
                        </a>

                        @if (!string.IsNullOrEmpty(movie.TrailerUrl))
                        {
                            <button class="btn btn-sm btn-outline-dark"
                                    data-bs-toggle="modal"
                                    data-bs-target="#trailerModal"
                                    data-trailer-url="@movie.TrailerUrl"
                                    data-movie-title="@movie.Title">
                                Trailer
                            </button>
                        }

                        @if (SignInManager.IsSignedIn(User))
                        {
                            var currentUser = await UserManager.GetUserAsync(User);
                            bool userLiked = await Model.UserLikedMovieAsync(currentUser.Id, movie.MovieId);

                            <form method="post" asp-page-handler="AddToWatchlist" class="d-inline">
                                <input type="hidden" name="movieId" value="@movie.MovieId" />
                                <button type="submit" class="btn btn-sm btn-outline-success">
                                    Add to Watchlist
                                </button>
                            </form>

                            <!-- Like/Unlike Button -->
                            <form method="post" class="d-inline" asp-page-handler="@(userLiked ? "RemoveLike" : "LikeMovie")">
                                <input type="hidden" name="movieId" value="@movie.MovieId" />
                                <button type="submit" class="btn btn-sm btn-outline-warning">
                                    ⭐ @await Model.GetLikesCountAsync(movie.MovieId)
                                </button>
                            </form>
                        }

                        @if (isAdmin)
                        {
                            <a asp-page="/Admin/EditMovie" asp-route-id="@movie.MovieId" class="btn btn-sm btn-outline-warning">
                                Edit
                            </a>

                            <form method="post" asp-page="/Admin/DetailsMovie" asp-page-handler="Delete" class="d-inline">
                                <input type="hidden" name="id" value="@movie.MovieId" />
                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                        onclick="return confirm('Delete this movie?')">
                                    Delete
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link"
                       asp-page="/Movie/Index"
                       asp-route-pageNumber="@i"
                       asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Trailer Modal -->
<div class="modal fade" id="trailerModal" tabindex="-1" aria-labelledby="trailerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trailerModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="stopTrailer()"></button>
            </div>
            <div class="modal-body text-center">
                <div class="ratio ratio-16x9">
                    <iframe id="trailerIframe" src="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var trailerModal = document.getElementById('trailerModal');
        trailerModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var trailerUrl = button.getAttribute('data-trailer-url');
            var movieTitle = button.getAttribute('data-movie-title');

            var modalTitle = trailerModal.querySelector('.modal-title');
            var iframe = trailerModal.querySelector('#trailerIframe');

            modalTitle.textContent = movieTitle + " - Trailer";

            if (trailerUrl.includes("youtube.com") || trailerUrl.includes("youtu.be")) {
                if (trailerUrl.includes("watch?v=")) {
                    trailerUrl = trailerUrl.replace("watch?v=", "embed/");
                } else if (trailerUrl.includes("youtu.be/")) {
                    trailerUrl = trailerUrl.replace("youtu.be/", "www.youtube.com/embed/");
                }
                iframe.src = trailerUrl + "?autoplay=1&mute=1";
            } else {
                iframe.src = trailerUrl;
            }
        });

        trailerModal.addEventListener('hidden.bs.modal', function () {
            var iframe = document.getElementById('trailerIframe');
            iframe.src = "";
        });

        function stopTrailer() {
            var iframe = document.getElementById('trailerIframe');
            iframe.src = "";
        }
    </script>
}
